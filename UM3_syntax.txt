# UM-3
Реализация учебной машины трёхадресной

Исходная программа на языке УМ3 записывается на перфокарту (текстовый файл).
Программа состоит из команд (одна на одну строку), написанных в мнемоническом коде:

<address> <command> <op1> <op2> <op3> [; <комментарий>]

Адреса обязаны нумероваться начиная с 1 и итерироваться с шагом 1

Где:

<address> - целое число от 0 до 511, номер ячейки памяти, в который будет
записана команда.

<op1>, <op2>, <op3> (по 9 бит) - целые числа от 0 до 511, чаще всего определяют
адреса операндов, но также по принципу неразличимости команд и данных могут
представлять число в 512-чной системе счисления

<command>(5 бит) - целое число от 0 до 31 или название команды, определяет
выполняемую команду.


Список доступных команд:
0 или "MOV": записывает содержимое ячейки с адресом op3 в ячейку с адресом op1

Операции над вещественными числами
"ADDREAL": 1
	<op1> := <op2> + <op3>
"SUBREAL": 2
	<op1> := <op2> - <op3>
"MULREAL": 3
	<op1> := <op2> * <op3>
"DIVREAL": 4
	<op1> := <op2> / <op3>
"INREAL": 6
	вводит из консоли op2 чисел в ячейки с адресами
	<op1>, <op1 + 1>, ... , <op1 + op2 - 1>
"OUTREAL": 7
	выводит числа в консоль, из тех же адресов, что и в "INREAL"

"JUMP": 9
	безусловный переход на команду по адресу op2, RA := op2

"RTOI": 10
	преобразование типа из вещесвтенного в целый, <op1> := longint(<op3>)

Считается, что в ячейках целые знаковые числа
"ADDINT": 11
	<op1> := <op2> + <op3>
"SUBINT": 12
	<op1> := <op2> - <op3>
"MULINT": 13
	<op1> := <op2> * <op3>
"DIVINT": 14
	<op1> := <op2> div <op3>
"MOD": 15
	<op1> := <op2> mod <op3>
"ININT": 16
"OUTINT": 17
	ввод и вывод аналогичны вещественным числам

При каждой арифметической команде регистр omega обновляется,
если результат равен 0,     то omega = 0
если результат меньше нуля, то omega = 1
если результат больше нуля, то omega = 2

"IF": 19
	команда условного перехода, зависит от значения omega:
	0, RA := op1; 1, RA := op2; 2, RA := op3
"PR": 20
	if omega = 0 RA := op2         Переход Равно
"PNR": 21
	if omega != 0 RA := op2        Переход Не Равно
"PB": 22
	if omega = 2 RA := op2         Переход Больше
"PM": 23
	if omega = 1 RA := op2         Переход Меньше
"PBR": 24
	if omega != 1 RA := op2        Переход Больше Равно
"PMR": 25
	if omega != 2 RA := op2        Переход Меньше Равно

"ITOR": 30
	преобразование целого в вещественный, <op1> := real(<op3>)

"END": 31
	выход из программы
